{"version":3,"sources":["components/header.js","utils/api.js","components/search.js","components/table.js","App.js","serviceworker.js","index.js"],"names":["Header","className","axios","get","Search","props","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","Table","state","sortOrder","results","search","event","target","searchTerm","toLowerCase","setState","sortByFName","sortedEmployees","sort","a","b","first","reverse","sortByLName","last","API","then","res","data","console","log","catch","err","this","onClick","map","item","includes","src","picture","thumbnail","alt","phone","email","DateFormat","dob","date","login","uuid","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9f5bf8f3.chunk.js","sourcesContent":["import React from 'react';\nimport \"../styles/header.css\";\n\nfunction Header () {\n    return (\n      <div className=\"header\">\n        <h1 className=\"display-4\"><i className=\"fas fa-user-friends\"></i> Staff Directory</h1>\n        <p>Click to filter or use the search box to refine your results.</p>\n      </div>\n    )\n  }\n\nexport default Header;","import axios from \"axios\";\nconst url = 'https://randomuser.me/api/?results=30';\n\n//api call\nexport default {\n    ApiSearch: function () {\n        return axios.get(url)\n\n    }\n}","import React from \"react\";\nimport \"../styles/search.css\"\n\n  function Search(props) {\n    return (\n      <div className=\"text-center\">\n        <form className=\"col d-flex\" onSubmit={props.handleFormSubmit}>\n          <input\n            className=\"form-control\"\n            value={props.value}\n            name=\"search\"\n            onChange={props.handleInputChange}\n            type=\"search\"\n            placeholder=\"Search by first name\"\n          />\n        </form>\n      </div>\n    );\n  }\n  \n  export default Search;","import React from \"react\";\nimport API from \"../utils/api.js\"\nimport Search from \"../components/search\"\nimport \"../styles/table.css\"\nimport DateFormat from \"dateformat\"\n\nclass Table extends React.Component {\n\n  state = {\n    sortOrder: \"\",\n    results: [],\n    search: \"\"\n  }\n  componentDidMount() {\n    API.ApiSearch()\n      .then(res => {\n        this.setState({ results: res.data.results })\n        console.log(this.state.results)\n      }).catch(err => console.log(err))\n  }\n\n  handleInputChange = event => {\n\n    if (event.target.name === \"search\") {\n      const searchTerm = event.target.value.toLowerCase();\n      this.setState({\n        search: searchTerm\n      })\n    }\n  }\n  sortByFName = () => {\n    const sortedEmployees = this.state.results.sort((a, b) => {\n      if (b.name.first > a.name.first) {\n        return -1\n      }\n      if (a.name.first > b.name.first) {\n        return 1\n      }\n      return 0;\n    });\n\n    if (this.state.sortOrder === \"DESC\") {\n      sortedEmployees.reverse();\n      this.setState({ sortOrder: \"ASC\" });\n    } else {\n      this.setState({ sortOrder: \"DESC\" });\n    }\n    this.setState({ results: sortedEmployees })\n  }\n\n\n  sortByLName = () => {\n    const sortedEmployees = this.state.results.sort((a, b) => {\n      if (b.name.last > a.name.last) {\n        return -1\n      }\n      if (a.name.last > b.name.last) {\n        return 1\n      }\n      return 0;\n    });\n    if (this.state.sortOrder === \"DESC\") {\n      sortedEmployees.reverse();\n      this.setState({ sortOrder: \"ASC\" });\n    } else {\n      this.setState({ sortOrder: \"DESC\" });\n    }\n    this.setState({ results: sortedEmployees })\n  }\n\n  render() {\n    return (\n      <div>\n        <Search handleInputChange={this.handleInputChange}\n          search={this.state.search} />\n\n        <div className=\"table-responsive\">\n          <table className=\"table table-striped table-resposive text-center table-hover\">\n            <thead>\n              <tr>\n                <th>Image</th>\n                <th>First Name <span className=\"downArrow\" onClick={this.sortByFName}></span></th>\n                <th>Last Name <span className=\"downArrow\" onClick={this.sortByLName}></span></th>\n                <th>Phone</th>\n                <th>Email</th>\n                <th>DOB </th>\n              </tr>\n            </thead>\n\n            {\n              this.state.results && this.state.results.map(item =>\n                item.name.first.toLowerCase().includes(this.state.search) ?\n                  <tbody key={item.login.uuid}>\n                    <tr>\n                      <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\n                      <td >{item.name.first}</td>\n                      <td >{item.name.last}</td>\n                      <td >{item.phone}</td>\n                      <td >{item.email}</td>\n                      <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>\n                    </tr>\n                  </tbody>\n\n                  :\n\n                  item.name.last.toLowerCase().includes(this.state.search) ?\n                    <tbody key={item.login.uuid}>\n                      <tr>\n                        <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\n                        <td >{item.name.first}</td>\n                        <td >{item.name.last}</td>\n                        <td >{item.phone} </td>\n                        <td >{item.email}</td>\n                        <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>\n                      </tr>\n                    </tbody>\n                    :null\n              )}\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Table;","import React from \"react\";\nimport Header from \"./components/header\";\nimport Table from \"./components/table\"; \n\nfunction App() {\n  return (\n    <div>\n    <Header/>\n    <Table />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceworker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}